[project]
name = "lasp-curryer"
version = "0.1.3"
description = "LASP SPICE extentions and geospatial data product generation tools."
authors = [{ name = "Brandon Stone", email = "brandon.h.stone@colorado.edu" }]
readme = "README.md"
keywords = [
    "spice",
    "geolocation",
    "geometry",
    "ephemeris",
    "attitude",
    "kernel",
    "coordinates",
    "lasp",
    "university of colorado",
    "naif"
]
requires-python = ">=3.9,<4"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
dependencies = [
    "scipy>=1.9",
    "pandas>=1.5",
    "xarray>=2022.11",
    # NOTE: netcdf 1.7.3 and h5py 3.14.0/1 resulted in issues on release. Pins
    # may be removed after future releases address those bugs.
    "netcdf4>=1.6,<1.7.3",
    "h5py>=3.0,<3.14.0",
    "geotiff>=0.2.10",
    "tifffile>=2021.7.4,!=2022.4.28,<2023.7.0",
    "affine>=2.3",
    "numcodecs>=0.10.0,<0.12.0",
    "pyproj>=3.6",
    "requests>=2.28",
    "jinja2>=3",
    "spiceypy>=6",
    "openpyxl>=3",
    "numpy (>=1.23,<2.0)",
]

[project.optional-dependencies]
# Since these are only for testing, we do not care what version they are
test = ["pre-commit", "pytest", "pytest-cov", "pytest-randomly", "ruff"]

[tool.poetry]
packages = [{ include = "curryer" }]

[project.urls]
repository = "https://github.com/lasp/curryer"
#documentation = ""  # Add once readthedocs is up

[tool.poetry.group.dev.dependencies]
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
pytest-randomly = "*"
ruff = "*"
ipython = "*"
responses = "^0.25.8"

#[tool.poetry.scripts]
#curryer = 'curryer.__main__:main'

[build-system]
requires = ["poetry-core>=2.0.1"]         # 2.0.0 has bugs
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120  # Target line length. ruff format "does its best" to respect this.
extend-include = ["curryer/**/*.py", "tests/**/*.py"]
extend-exclude = ["data/**", "tests/data/**"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort import sorting
    "S",  # flake8-bandit security
    "PT", # flake8-pytest-style
    "UP", # pyupgrade syntax upgrader
]
per-file-ignores = { "tests/*" = [
    "S",
    "PT009",  # Allow unittest-style assertions in tests
    "PT027",  # Allow unittest-style assertRaises in tests
], "curryer/spicierpy/__init__.py" = [
    "F403",
] }
ignore = [
    "E501", # Ignore line length errors, as we trust ruff format to handle this.
    "F541", # Allow f strings as docstrings
]

[tool.codespell]
ignore-words-list = "timout,sorce,SORCE,AHD"
