name: Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        run: pip install ".[test]"

      - name: Ruff check linting
        run: ruff check

      - name: Build test docker image
        run: docker build . --file Dockerfile --target test --build-arg BASE_IMAGE_PYTHON_VERSION=${{ matrix.python-version }} --tag curryer-${{ matrix.python-version }}-test:latest

      - name: Run test docker image
        run: docker run -i curryer-${{ matrix.python-version }}-test:latest

      - name: Copy coverage report
        run: docker cp $(docker ps -alq):/app/curryer/coverage.xml ./coverage.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          oidc: true

  demo:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.11"]
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build demo docker image
        run: docker build . --file Dockerfile --target demo --build-arg BASE_IMAGE_PYTHON_VERSION=${{ matrix.python-version }} --tag curryer-${{ matrix.python-version }}-demo:latest

      - name: Run demo docker image
        run: docker run -i --rm curryer-${{ matrix.python-version }}-demo:latest
