"""
Pytest configuration and shared fixtures for correction module tests.

This module provides shared fixtures used across multiple test files to ensure
consistent configuration and data loading.
"""

import pytest
from pathlib import Path
from curryer.correction import monte_carlo as mc
from clarreo_config import create_clarreo_monte_carlo_config


@pytest.fixture(scope="session")
def clarreo_config_from_json():
    """Load CLARREO config from JSON (session-scoped for efficiency).

    This fixture loads the canonical CLARREO configuration from JSON file.
    The JSON file should be generated by test_generate_clarreo_config_json()
    and committed to version control as the single source of truth.

    Session scope ensures the config is loaded once and reused across all tests.
    """
    config_path = Path(__file__).parent / "configs/clarreo_monte_carlo_config.json"

    if not config_path.exists():
        pytest.skip(f"Config file not found: {config_path}. "
                   f"Run test_generate_clarreo_config_json() first.")

    return mc.load_config_from_json(config_path)


@pytest.fixture(scope="session")
def clarreo_config_programmatic():
    """Generate CLARREO config programmatically (for comparison tests).

    This fixture creates the configuration programmatically using the
    create_clarreo_monte_carlo_config() function. Useful for testing
    that programmatic and JSON configs produce equivalent results.

    Session scope for efficiency across multiple tests.
    """
    data_dir = Path(__file__).parent.parent / "data/clarreo/gcs"
    generic_dir = Path("data/generic")
    return create_clarreo_monte_carlo_config(data_dir, generic_dir)


@pytest.fixture(scope="session")
def clarreo_data_dir():
    """Path to CLARREO test data directory.

    Returns:
        Path: tests/data/clarreo/
    """
    return Path(__file__).parent.parent / "data/clarreo"


@pytest.fixture(scope="session")
def clarreo_gcs_data_dir(clarreo_data_dir):
    """Path to CLARREO GCS test data directory.

    Returns:
        Path: tests/data/clarreo/gcs/
    """
    return clarreo_data_dir / "gcs"


@pytest.fixture(scope="session")
def clarreo_image_match_data_dir(clarreo_data_dir):
    """Path to CLARREO image matching test data directory.

    Returns:
        Path: tests/data/clarreo/image_match/
    """
    return clarreo_data_dir / "image_match"


@pytest.fixture(scope="session")
def generic_kernel_dir():
    """Path to generic SPICE kernels directory.

    Returns:
        Path: data/generic/
    """
    return Path("data/generic")


@pytest.fixture
def temp_work_dir(tmp_path):
    """Create temporary working directory for test outputs.

    This fixture provides a clean temporary directory for each test
    that needs to write files (NetCDF outputs, intermediate results, etc.)

    Function scope ensures each test gets a fresh directory.

    Returns:
        Path: Temporary directory path
    """
    work_dir = tmp_path / "monte_carlo_work"
    work_dir.mkdir(parents=True, exist_ok=True)
    return work_dir


# Configuration for pytest
def pytest_configure(config):
    """Configure pytest with custom markers."""
    config.addinivalue_line(
        "markers", "slow: marks tests as slow (deselect with '-m \"not slow\"')"
    )
    config.addinivalue_line(
        "markers", "integration: marks tests as integration tests"
    )
    config.addinivalue_line(
        "markers", "requires_gcs: marks tests that require GCS credentials"
    )

